{"version":3,"sources":["components/Chart/Chart.module.css","components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","covid-19-black.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justifyContent","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDaliyData","modifieddata","map","daliydata","total","date","reportDate","fetchCountries","countries","name","Chart","useState","dailyData","setdailyData","useEffect","fechData","lineChart","labels","toLocaleDateString","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","styled","CountryPicker","handleCountryChange","setCountries","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","setState","fetchdata","this","src","logo","alt","image","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae74472e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__e8Y-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__UCoAX\",\"card\":\"Cards_card__2RFwT\",\"infected\":\"Cards_infected__2e0g2\",\"recovered\":\"Cards_recovered__kVR2I\",\"deaths\":\"Cards_deaths__38B7e\"};","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport styles from './Cards.module.css'\r\nimport cx from 'classnames'\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return <h1>Loading....</h1>\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justifyContent='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases from COVID-19.</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n                             <Typography variant='h5'>\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19.</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                             <Typography variant='h5'>\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19.</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if (country) {\r\n      changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n  \r\n    try {\r\n        const { data: { confirmed, deaths, recovered, lastUpdate } } = await axios.get(changeableUrl)\r\n        return { confirmed, deaths, recovered, lastUpdate };\r\n    } catch (error) {\r\n      return  error;\r\n    }\r\n}\r\nexport const fetchDaliyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`)\r\n        const modifieddata = data.map((daliydata)=>({\r\n            confirmed: daliydata.confirmed.total,\r\n            recovered: daliydata.recovered.total,\r\n            deaths: daliydata.deaths.total,\r\n            date: daliydata.reportDate \r\n        }))\r\n        return modifieddata;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n      const { data: { countries } } = await axios.get(`${url}/countries`);\r\n      return countries.map((country) => country.name);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };","import { useEffect, useState } from 'react'\r\nimport { Line,Bar } from 'react-chartjs-2'\r\nimport { fetchDaliyData } from '../../api';\r\nimport styled from './Chart.module.css'\r\n\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setdailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fechData = async () => { setdailyData(await fetchDaliyData()) }\r\n    fechData()\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styled.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart\r\n","import { FormControl, NativeSelect } from '@material-ui/core'\r\nimport {useEffect,useState} from 'react'\r\nimport {fetchCountries} from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const fetchAPI = async () => {\r\n        setCountries(await fetchCountries());\r\n      };\r\n  \r\n      fetchAPI();\r\n    }, []);\r\n \r\n    return (\r\n        <div>\r\n            <FormControl>\r\n                <NativeSelect defaultValue='' onChange={(e)=> handleCountryChange(e.target.value) }>\r\n                    <option value='Pakistan'>Pakistan</option>\r\n                    {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","export default __webpack_public_path__ + \"static/media/covid-19-black.efac1709.png\";","import React, { Component } from 'react';\r\nimport { Cards, Chart, CountryPicker } from './components'\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api/index'\r\nimport logo from './covid-19-black.png'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data: {},\r\n        country:''\r\n    }\r\n    async componentDidMount() {\r\n        const fetchdata = await fetchData();\r\n        this.setState({ data: fetchdata })\r\n    }\r\n    handleCountryChange = async (country) => {\r\n        const data = await fetchData(country);\r\n        this.setState({ data, country: country });\r\n      }\r\n    render() {\r\n        const { data,country } = this.state;\r\n        return (\r\n            <>\r\n                <div className={styles.container}>\r\n                    <img src={logo} alt='COVID-19' className={styles.image} />\r\n                    <Cards data={data} />\r\n                    <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                    <Chart data={data} country={country} /> \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\n ReactDOM.render(<App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3OjQ3\",\"image\":\"App_image__1hqOW\"};"],"sourceRoot":""}